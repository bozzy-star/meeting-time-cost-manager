name: 🚀 Deploy Meeting TimeValue Pro

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

env:
  NODE_VERSION: '18'

jobs:
  test:
    name: 🧪 Test & Build
    runs-on: ubuntu-latest
    
    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4
        
      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📦 Install root dependencies
        run: npm ci
        
      - name: 📦 Install backend dependencies
        run: |
          cd backend
          npm ci
          
      - name: 📦 Install frontend dependencies
        run: |
          cd frontend
          npm ci
          
      - name: 🏗️ Build backend
        run: |
          cd backend
          npm run build || echo "No build script found"
          
      - name: 🏗️ Build frontend
        run: |
          cd frontend
          npm run build
          
      - name: 🧪 Run backend tests
        run: |
          cd backend
          npm test || echo "No tests found"
          
      - name: 🧪 Run frontend tests
        run: |
          cd frontend
          npm test || echo "No tests found"

  deploy-backend:
    name: 🚀 Deploy Backend
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4
        
      - name: 🚂 Deploy to Railway
        uses: railway-cli/deployment@v1
        with:
          service: meeting-timevalue-backend
          project: ${{ secrets.RAILWAY_PROJECT_ID }}
          token: ${{ secrets.RAILWAY_TOKEN }}

  deploy-frontend:
    name: 🌐 Deploy Frontend
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4
        
      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📦 Install frontend dependencies
        run: |
          cd frontend
          npm ci
          
      - name: 🏗️ Build frontend
        run: |
          cd frontend
          npm run build
        env:
          VITE_API_URL: ${{ secrets.VITE_API_URL }}
          
      - name: 🚀 Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./frontend
          vercel-args: '--prod'

  notify:
    name: 📢 Deployment Notification
    needs: [deploy-backend, deploy-frontend]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: 📢 Notify deployment status
        run: |
          if [ "${{ needs.deploy-backend.result }}" == "success" ] && [ "${{ needs.deploy-frontend.result }}" == "success" ]; then
            echo "✅ Deployment successful!"
          else
            echo "❌ Deployment failed!"
            exit 1
          fi